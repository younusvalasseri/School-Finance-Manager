plugins {
    id "com.android.application"
    id "kotlin-android"
    // id "kotlin-android-extensions"  
    id "kotlin-kapt"
    id 'kotlin-parcelize'  // Good addition
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.week7InstituteProject2"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // Specify your own unique Application ID
        applicationId = "com.example.week7InstituteProject2"
        // Update these values to match your application needs
        minSdkVersion 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // Add your own signing config for the release build
            // Signing with the debug keys for now, so `flutter run --release` works
            signingConfig = signingConfigs.debug
        }
    }

    buildFeatures {
        viewBinding true
    }
}

flutter {
    source = "../.."
}

dependencies {
    // Update to the latest Firebase BoM version
    implementation platform('com.google.firebase:firebase-bom:32.5.0')

    implementation 'com.google.firebase:firebase-analytics'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'org.jetbrains.kotlin') {
            details.useVersion kotlin_version
        }
    }
}
